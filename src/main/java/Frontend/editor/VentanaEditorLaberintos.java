/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend.editor;

import Backend.archivos.ArchivosPrograma;
import Backend.Laberinto;
import Backend.laberintos.ConstructorDeLaberintos;
import Backend.laberintos.DiseñadorLaberinto;
import Backend.laberintos.LaberintoException;
import Backend.listas.ListaException;
import Backend.listas.ListaGenerica;
import Frontend.VentanaMenuSeleccionTablero;
import Frontend.VentanaVisualizarLaberinto;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Phoenix
 */
public class VentanaEditorLaberintos extends javax.swing.JFrame {

    private static JFrame ventanaAnterior;

    private ArchivosPrograma archivoTableros = new ArchivosPrograma();
    private ListaGenerica<Laberinto> listaLaberintos;
    private ConstructorDeLaberintos constructorDeLaberintos = new ConstructorDeLaberintos();
    private DiseñadorLaberinto validador = new DiseñadorLaberinto();

    //Variable para captuar al tablero seleccionado
    int selected;

    /**
     * Creates new form VentanaEditorLaberintos
     */
    public VentanaEditorLaberintos(JFrame ventanaAnterior) {
        initComponents();
        this.ventanaAnterior = ventanaAnterior;
        this.listaLaberintos = archivoTableros.getListaLaberintos();
        setLocationRelativeTo(null);

        try {
            mostrarLaberintosExistentes();
        } catch (ListaException ex) {
            Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEditarLaberinto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLaberinto = new javax.swing.JTextArea();
        btnGuardarCambios = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtLaberintoSeleccionado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLaberintosExistentes = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnVisualizarLaberinto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEditarLaberinto.setText("Editar");
        btnEditarLaberinto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarLaberintoActionPerformed(evt);
            }
        });

        txtLaberinto.setColumns(20);
        txtLaberinto.setRows(5);
        jScrollPane1.setViewportView(txtLaberinto);

        btnGuardarCambios.setText("Guardar Cambios");
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Seleccione un Laberinto");

        txtLaberintosExistentes.setColumns(20);
        txtLaberintosExistentes.setRows(5);
        jScrollPane2.setViewportView(txtLaberintosExistentes);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Laberintos Existentes");

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnVisualizarLaberinto.setText("Visualizar");
        btnVisualizarLaberinto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarLaberintoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Identificacion  de casilla");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgFondos/datosconstruccion.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnRegresar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(476, 476, 476)
                        .addComponent(btnGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVisualizarLaberinto, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(txtLaberintoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(btnEditarLaberinto, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel2)))
                        .addGap(48, 48, 48)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(24, 24, 24))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLaberintoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarLaberinto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVisualizarLaberinto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegresar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarLaberintoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarLaberintoActionPerformed
        //Si el usuario dejo el campo vacio se le notifica y finaliza  el evento del boton
        if (txtLaberintoSeleccionado.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo no puede estar vacio");
            return;
        }

        int sizeLista;
        try {
            sizeLista = archivoTableros.getListaLaberintos().obtenerSize();
            selected = Integer.parseInt(txtLaberintoSeleccionado.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un numero de la lista");
            return;
        }
        if (selected >= 0 && selected < sizeLista) {

            try {
                String tablero = archivoTableros.getListaLaberintos().obtenerValor(selected).getConfiguracionLaberinto();
                System.out.println(tablero);
                txtLaberinto.setText(tablero);
            } catch (ListaException ex) {
                Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un tablero existente");
        }
    }//GEN-LAST:event_btnEditarLaberintoActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        String cambios = txtLaberinto.getText();
        if (constructorDeLaberintos.verificarLaberintoValido(cambios)) {
            if (!validador.verificarPuertas(cambios)) {
                return;
            }
            if (!validador.verificarOro(cambios)) {
                return;
            }
            try {
                archivoTableros.getListaLaberintos().obtenerValor(selected).setConfiguracionLaberinto(cambios);
                archivoTableros.serializarListas();
                JOptionPane.showMessageDialog(null, "Cambios Realizado Con Éxito");
                txtLaberinto.setText("");
            } catch (ListaException ex) {
                Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Se produjo un error al intentar modificar el laberinto. Verifique las dimensiones y la estructura del laberinto.");
        }
    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.dispose();
        ventanaAnterior.setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnVisualizarLaberintoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarLaberintoActionPerformed
        //Si el usuario dejo el campo vacio se le notifica y finaliza  el evento del boton
        if (txtLaberintoSeleccionado.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo no puede estar vacio");
            return;
        }

        int sizeLista;

        try {
            sizeLista = archivoTableros.getListaLaberintos().obtenerSize();
            selected = Integer.parseInt(txtLaberintoSeleccionado.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un numero de la lista");
            return;
        }
        if (selected >= 0 && selected < sizeLista) {
            //se oculta esta ventana

            try {
                VentanaVisualizarLaberinto ventanaVisualizarLaberinto = new VentanaVisualizarLaberinto(this, rootPaneCheckingEnabled, listaLaberintos.obtenerValor(selected));
                ventanaVisualizarLaberinto.setVisible(true);
            } catch (ListaException ex) {
                Logger.getLogger(VentanaMenuSeleccionTablero.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un tablero existente");
        }
    }//GEN-LAST:event_btnVisualizarLaberintoActionPerformed

    /**
     * Con este metodo se muestra el total de tableros existentes al querer
     * editar alguno
     *
     * @throws ListaException
     */
    private void mostrarLaberintosExistentes() throws ListaException {
        txtLaberintosExistentes.setText(constructorDeLaberintos.mostrarLaberintosExistentes(listaLaberintos));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEditorLaberintos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaEditorLaberintos(ventanaAnterior).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarLaberinto;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnVisualizarLaberinto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtLaberinto;
    private javax.swing.JTextField txtLaberintoSeleccionado;
    private javax.swing.JTextArea txtLaberintosExistentes;
    // End of variables declaration//GEN-END:variables
}
