/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.ControladorPartida;
import Backend.Laberinto;
import Backend.casillas.Jugador;
import Backend.listas.ListaException;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Phoenix
 */
public class VentanaJuego extends javax.swing.JFrame implements KeyListener {

    private static JFrame ventanaAnterior;

    ControladorPartida constructorDeLaberintos;
    Jugador jugador;
    private static Laberinto laberintoSeleccionado;

    public void terminarElJuegoActual() {
        this.dispose();
        ventanaAnterior.setVisible(true);
    }

    public void setPanelTablero(JPanel panelTablero) {
        this.panelTablero = panelTablero;
    }

    public Jugador getJugador() {
        return jugador;
    }

    public void setJugador(Jugador jugador) {
        this.jugador = jugador;

    }

    public void actualizarMovimientosValidos(int cantidadMovimietos) {
        lblMovimientoInvalido.setText(cantidadMovimietos + "");
    }

    public VentanaJuego(Laberinto laberintoSeleccionado, JFrame ventanaAnterior) {
        initComponents();
        VentanaJuego.laberintoSeleccionado = laberintoSeleccionado;
        VentanaJuego.ventanaAnterior = ventanaAnterior;
        setLocationRelativeTo(null);
        addKeyListener(this); // Agregar el KeyListener a la ventana
        setFocusable(true);    // Permitir que la ventana tenga el foco
        requestFocusInWindow(); // Establecer el foco en la ventana
        iniciarPartida();
        this.toFront();
        this.requestFocusInWindow();
    }

    private void iniciarPartida() {
        constructorDeLaberintos = new ControladorPartida(panelTablero, this, laberintoSeleccionado);
        try {
            constructorDeLaberintos.iniciarComponentes();

        } catch (ListaException ex) {
            Logger.getLogger(VentanaJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTablero = new javax.swing.JPanel();
        lblNombreLaberinto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblOroActual = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMovimientoInvalido = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtOroParaEscapar = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCantidadDeBots = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMovimientoBotPorSegundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setPreferredSize(new java.awt.Dimension(970, 700));
        addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                formHierarchyChanged(evt);
            }
        });

        panelTablero.setFocusable(false);
        panelTablero.setPreferredSize(new java.awt.Dimension(0, 0));
        panelTablero.setRequestFocusEnabled(false);
        panelTablero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                panelTableroFocusLost(evt);
            }
        });
        panelTablero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelTableroKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelTableroLayout = new javax.swing.GroupLayout(panelTablero);
        panelTablero.setLayout(panelTableroLayout);
        panelTableroLayout.setHorizontalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        panelTableroLayout.setVerticalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        lblNombreLaberinto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNombreLaberinto.setText("N");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("OroActual");

        lblOroActual.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOroActual.setText("0");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Movimientos Invalidos");

        lblMovimientoInvalido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMovimientoInvalido.setText("0");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Oro Necesario Para Escapar");

        txtOroParaEscapar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtOroParaEscapar.setText("0");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 51, 0));
        jLabel4.setText("Bots En El Mapa");

        txtCantidadDeBots.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCantidadDeBots.setText("0");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 51, 0));
        jLabel5.setText("Movimientos Por Segundo");

        txtMovimientoBotPorSegundo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMovimientoBotPorSegundo.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(txtCantidadDeBots))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(txtMovimientoBotPorSegundo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(txtOroParaEscapar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(lblMovimientoInvalido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lblOroActual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGap(442, 442, 442)
                .addComponent(lblNombreLaberinto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOroActual)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMovimientoInvalido)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOroParaEscapar)
                        .addGap(103, 103, 103)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadDeBots)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMovimientoBotPorSegundo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblNombreLaberinto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelTableroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelTableroKeyPressed
    }//GEN-LAST:event_panelTableroKeyPressed

    private void panelTableroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_panelTableroFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_panelTableroFocusLost

    private void formHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formHierarchyChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaJuego(laberintoSeleccionado, ventanaAnterior).setVisible(true);
            }
        });
    }

    public JLabel getLblNombreLaberinto() {
        return lblNombreLaberinto;
    }

    public void setLblNombreLaberinto(JLabel lblNombreLaberinto) {
        this.lblNombreLaberinto = lblNombreLaberinto;
    }

    public void mostrarInformacion(int oroParaEscapar, int botsEnElMapa, int movimientosPorSegundo) {
        txtOroParaEscapar.setText(oroParaEscapar + "");
        txtCantidadDeBots.setText(botsEnElMapa + "");
        txtMovimientoBotPorSegundo.setText(movimientosPorSegundo + "");
    }

    @Override
    public void keyPressed(KeyEvent e) {
        /*int keyCode = e.getKeyCode();
        switch (keyCode) {
            case KeyEvent.VK_W:
                jugador.realizarMovimiento("w");
                break;
            case KeyEvent.VK_A:
                jugador.realizarMovimiento("a");
                break;
            case KeyEvent.VK_S:
                jugador.realizarMovimiento("s");
                break;
            case KeyEvent.VK_D:
                jugador.realizarMovimiento("d");
                break;
            default:
                break;
        }*/
    }

    public void actualizarOro(int oro) {
        lblOroActual.setText(oro + "");
    }

    public void actualizarNombreLaberinto(String nombreLaberinto) {
        lblNombreLaberinto.setText(nombreLaberinto);
    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
        int keyCode = e.getKeyCode();
        switch (keyCode) {
            case KeyEvent.VK_W:
                jugador.realizarMovimiento("w");
                break;
            case KeyEvent.VK_A:
                jugador.realizarMovimiento("a");
                break;
            case KeyEvent.VK_S:
                jugador.realizarMovimiento("s");
                break;
            case KeyEvent.VK_D:
                jugador.realizarMovimiento("d");
                break;
            default:
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblMovimientoInvalido;
    private javax.swing.JLabel lblNombreLaberinto;
    private javax.swing.JLabel lblOroActual;
    private javax.swing.JPanel panelTablero;
    private javax.swing.JLabel txtCantidadDeBots;
    private javax.swing.JLabel txtMovimientoBotPorSegundo;
    private javax.swing.JLabel txtOroParaEscapar;
    // End of variables declaration//GEN-END:variables

}
